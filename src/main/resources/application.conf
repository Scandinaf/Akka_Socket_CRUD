server {
  host = "localhost"
  port = 9000
}

// Выбор был сделан в пользу Fork-join т.к у нас CPU операции, мы не ходим в хранилища и т.д
in-messages-flow-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 2.0
    parallelism-max = 4
  }
  throughput = 20
}

out-messages-flow-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 2.0
    parallelism-max = 4
  }
  throughput = 20
}

auth-actor-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 1.0
    parallelism-max = 4
  }
  throughput = 20
}

routing-actor-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 4
    parallelism-factor = 2.0
    parallelism-max = 4
  }
  throughput = 20
}

table-repository-actor-dispatcher {
  executor = "thread-pool-executor"
  type = PinnedDispatcher
  thread-pool-executor.allow-core-timeout=off
}

fork-join-dispatcher-common {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 1
    parallelism-factor = 1.0
    parallelism-max = 2
  }
  throughput = 5
}

akka {
  http.server.websocket.periodic-keep-alive-mode = pong
  http.server.websocket.periodic-keep-alive-max-idle = 10 seconds
  actor {
    guardian-supervisor-strategy = com.assignment.actor.configuration.SystemSupervisorStrategy
  }
}